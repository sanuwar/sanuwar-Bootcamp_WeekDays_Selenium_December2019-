<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report Directory/Users/sanuwar/IdeaProjects/Bootcamp_WeekDays_Selenium_December2019/Google/target/surefire-reports/html]]>
    </line>
  </reporter-output>
  <suite started-at="2020-02-26T21:11:46 EST" name="Surefire suite" finished-at="2020-02-26T21:12:16 EST" duration-ms="29677">
    <groups>
    </groups>
    <test started-at="2020-02-26T21:11:46 EST" name="Surefire test" finished-at="2020-02-26T21:12:16 EST" duration-ms="29677">
      <class name="TestGoogle.TestPage">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:TestGoogle.TestPage@16267862]" started-at="2020-02-26T21:11:46 EST" name="extentSetup" finished-at="2020-02-26T21:11:46 EST" duration-ms="199" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@470a659f]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report Directory/Users/sanuwar/IdeaProjects/Bootcamp_WeekDays_Selenium_December2019/Google/target/surefire-reports/html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestGoogle.TestPage@16267862]" started-at="2020-02-26T21:11:46 EST" name="setUp" finished-at="2020-02-26T21:11:49 EST" duration-ms="3156" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mac]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.google.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:TestGoogle.TestPage@16267862]" started-at="2020-02-26T21:11:49 EST" name="startExtent" finished-at="2020-02-26T21:11:49 EST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestGoogle.TestPage.searchFromDatabase() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchFromDatabase()[pri:0, instance:TestGoogle.TestPage@16267862]" started-at="2020-02-26T21:11:49 EST" name="searchFromDatabase" finished-at="2020-02-26T21:12:08 EST" duration-ms="18999" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchFromDatabase -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:TestGoogle.TestPage@16267862]" started-at="2020-02-26T21:12:08 EST" name="afterEachTestMethod" finished-at="2020-02-26T21:12:08 EST" duration-ms="382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchFromDatabase status=SUCCESS method=TestPage.searchFromDatabase()[pri:0, instance:TestGoogle.TestPage@16267862] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:TestGoogle.TestPage@16267862]" started-at="2020-02-26T21:12:08 EST" name="cleanUp" finished-at="2020-02-26T21:12:08 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestGoogle.TestPage@16267862]" started-at="2020-02-26T21:12:08 EST" name="setUp" finished-at="2020-02-26T21:12:11 EST" duration-ms="2739" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mac]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.google.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchFromTable()[pri:0, instance:TestGoogle.TestPage@16267862]" started-at="2020-02-26T21:12:11 EST" name="searchFromTable" finished-at="2020-02-26T21:12:15 EST" duration-ms="3372" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at TestGoogle.TestPage.searchFromTable(TestPage.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:112)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchFromTable -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:TestGoogle.TestPage@16267862]" started-at="2020-02-26T21:12:11 EST" name="startExtent" finished-at="2020-02-26T21:12:11 EST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestGoogle.TestPage.searchFromTable() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:TestGoogle.TestPage@16267862]" started-at="2020-02-26T21:12:15 EST" name="afterEachTestMethod" finished-at="2020-02-26T21:12:16 EST" duration-ms="998" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchFromTable status=FAILURE method=TestPage.searchFromTable()[pri:0, instance:TestGoogle.TestPage@16267862] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:TestGoogle.TestPage@16267862]" started-at="2020-02-26T21:12:16 EST" name="cleanUp" finished-at="2020-02-26T21:12:16 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:TestGoogle.TestPage@16267862]" started-at="2020-02-26T21:12:16 EST" name="generateReport" finished-at="2020-02-26T21:12:16 EST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- TestGoogle.TestPage -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
